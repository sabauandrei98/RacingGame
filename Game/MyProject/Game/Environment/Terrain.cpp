//-------------------------------------------------------------------------------
//-- Terrain.cpp ----------------------------------------------------------------
//-------------------------------------------------------------------------------
#include "Terrain.hpp"
//-------------------------------------------------------------------------------
//  PUBLIC METHODS
//-------------------------------------------------------------------------------
//-------------------------------------------------------------------------------
//  @Terrain::Terrain()
//-------------------------------------------------------------------------------
Terrain::Terrain(uint32_t width,uint32_t height):width(width),height(height)
{
    
}
//-------------------------------------------------------------------------------
//  @Terrain::build()
//-------------------------------------------------------------------------------
void Terrain::build()
{
    for(int i=0;i<height;i++)
        for(int j=0;j<width;j++)
        {
            double nx=j/width-0.5;
            double ny=i/height-0.5;
            
            auto e=(0.94 * noise1( 1 * nx,  1 * ny) +
                    0.86 * noise1( 2 * nx,  2 * ny) +
                    0.38 * noise1( 4 * nx,  4 * ny) +
                    0.06 * noise1( 8 * nx,  8 * ny) +
                    0.00 * noise1(16 * nx, 16 * ny) +
                    0.04 * noise1(32 * nx, 32 * ny));
            e /= (0.94+0.86+0.38+0.06+0.00+0.04);
            e = pow(e, 5.00);
            
            auto m = (0.90 * noise2( 1 * nx,  1 * ny) +
                     0.00 * noise2( 2 * nx,  2 * ny) +
                     0.64 * noise2( 4 * nx,  4 * ny) +
                     1.00 * noise2( 8 * nx,  8 * ny) +
                     1.00 * noise2(16 * nx, 16 * ny) +
                     0.50 * noise2(32 * nx, 32 * ny));
            m /= (0.90+0.00+0.64+1.00+1.00+0.50);
        }
}
//-------------------------------------------------------------------------------
//  PRIVATE METHODS
//-------------------------------------------------------------------------------
//-------------------------------------------------------------------------------
//  @Terrain::noise1()
//-------------------------------------------------------------------------------
double
Terrain::noise1(double nx,double ny)
{
    PerlinNoise pn(256);
    return pn.noise(nx,ny,1);
}
//-------------------------------------------------------------------------------
//  @Terrain::noise2()
//-------------------------------------------------------------------------------
double
Terrain::noise2(double nx,double ny)
{
    PerlinNoise pn(100);
    return pn.noise(nx,ny,1);
}
